import config

import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api import VkUpload
import requests
from bs4 import BeautifulSoup as BS

vk_session = vk_api.VkApi(token="–¢—É—Ç –≤–∞—à —Ç–æ–∫–µ–Ω")
longpoll = VkBotLongPoll(vk_session, 201914526 )
upload = VkUpload(vk_session)
vk = vk_session.get_api()






def sender(id, text):
    vk_session.method('messages.send',{'chat_id' : id, 'message' : text, 'random_id' : 0})







# –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å json
url = 'https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5'
response = requests.get(url).json()






def send_welcome(msg):
    sender(id,'–í—ã–±–µ—Ä–∏—Ç–µ: \n'
              '–ü–æ–≥–æ–¥–∞ \n'
              '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    process_select_step(msg)



def process_select_step(msg):
    try:
        if (msg == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç'):
            coins(msg)
        elif (msg == '–ü–æ–≥–æ–¥–∞'):
            weather(msg)
        else:
            send_welcome(msg)

    except Exception as e:
       print('–û—à–∏–±–∫–∞')



# –ü–æ–≥–æ–¥–∞
def weather(msg):
    r = requests.get('https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-—Ö–∞—Ä—å–∫–æ–≤')
    html = BS(r.content, 'html.parser')

    for el in html.select('#content'):
        t_min = el.select('.temperature .min')[0].text
        t_max = el.select('.temperature .max')[0].text
        text = el.select('.wDescription .description')[0].text



    sender(id, "–ü—Ä–∏–≤–µ—Ç, –ø–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n" +
        t_min + ', ' + t_max + '\n' + text)



# –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç

def coins(msg):
    sender(id,'–í—ã–±–µ—Ä–∏—Ç–µ: \n'
              'USD \n'
              'EUR \n'
              'RUR \n'
              'BTC \n')
    sender(id,
                    "–£–∑–Ω–∞—Ç—å –Ω–∞–ª–∏—á–Ω—ã–π –∫—É—Ä—Å –ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫–∞ (–≤ –æ—Ç–¥–µ–ª–µ–Ω–∏—è—Ö)")
    process_coin_step(msg)



def process_coin_step(msg):
    try:


       for coin in response:
           if (msg == coin['ccy']):
              sender(id, printCoin(coin['buy'], coin['sale']),
                               parse_mode="Markdown")

    except Exception as e:
       sender(id,'oooops')



def printCoin(buy, sale):
    '''–í—ã–≤–æ–¥ –∫—É—Ä—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'''
    return "üí∞ *–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏:* " + str(buy) + "\nüí∞ *–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏:* " + str(sale)





for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:
        if event.from_chat:

            id = event.chat_id
            slovo = event.object.message['text'].lower()



            try:
                dey = event.message.action['type']
                invite_id = event.message.action['member_id']
            except:
                dey = ''
                invite_id = -100

                if dey == 'chat_invite_user':
                    sender(id,f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, @id{invite_id}!')


                s2 = ' ,:@.-()/?'

                for sim in s2:
                    slovo = slovo.replace(str(sim), ',')
                msg = slovo.split(',')
                while 1:
                    try:
                        msg.remove('')
                    except ValueError:
                        break
                print(msg)
                if msg[0] == 'test':
                    send_welcome(msg)
