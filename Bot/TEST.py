#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys
sys.path.insert(0, '../')

from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import vk_api
from datetime import datetime
import random
from Bot import get_pictures

#login, password='',''
#vk_session = vk_api.VkApi(login, password)
#vk_session.auth()

token ='–¢—É—Ç –≤–∞—à —Ç–æ–∫–µ–Ω'
vk_session = vk_api.VkApi(token=token)

session_api = vk_session.get_api()

longpoll = VkLongPoll(vk_session)



def create_keyboard(response):
    keyboard = VkKeyboard(one_time=False)


    if response == '—Ç–µ—Å—Ç':

        keyboard.add_button('–ü—Ä–æ—Ñ–∏–ª—åüë§', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('–ë–∞–ª–∞–Ω—Åüíº', color=VkKeyboardColor.PRIMARY)

        keyboard.add_line()  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É
        keyboard.add_button('–ú–∞–≥–∞–∑–∏–Ωüè™', color=VkKeyboardColor.NEGATIVE)

        keyboard.add_line()
        keyboard.add_button('–ë–µ–ª–∞—è –∫–Ω–æ–ø–∫–∞', color=VkKeyboardColor.DEFAULT)
        keyboard.add_button('–ü—Ä–∏–≤–µ—Ç', color=VkKeyboardColor.PRIMARY)



    elif response == '–ø—Ä–∏–≤–µ—Ç':
        keyboard.add_button('–¢–µ—Å—Ç', color=VkKeyboardColor.POSITIVE)

    elif response =='–≤–µ—Ä–Ω—É—Ç—å—Å—èüîô' or response == '–≤–µ—Ä–Ω—É—Ç—å—Å—è' :
        keyboard.add_button('–ü—Ä–æ—Ñ–∏–ª—åüë§', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('–ë–∞–ª–∞–Ω—Åüíº', color=VkKeyboardColor.PRIMARY)

        keyboard.add_line()  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É
        keyboard.add_button('–ú–∞–≥–∞–∑–∏–Ωüè™', color=VkKeyboardColor.NEGATIVE)

        keyboard.add_line()
        keyboard.add_button('–ë–µ–ª–∞—è –∫–Ω–æ–ø–∫–∞', color=VkKeyboardColor.DEFAULT)
        keyboard.add_button('–ü—Ä–∏–≤–µ—Ç', color=VkKeyboardColor.PRIMARY)


    elif response == '–º–∞–≥–∞–∑–∏–Ωüè™' or response == '–º–∞–≥–∞–∑–∏–Ω':
        keyboard.add_button('–ú–∞—à–∏–Ω—ã', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–ú–æ—Ç–æ—Ü–∏–∫–ª—ã', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–í–µ—Ä—Ç–∞–ª—ë—Ç—ã', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–°–∞–º–æ–ª—ë—Ç—ã', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—èüîô', color=VkKeyboardColor.POSITIVE)


    elif response =='–≤–µ—Ä–Ω—É—Ç—å—Å—è‚óÄ ' :

        keyboard.add_button('bmwüöó', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É

        keyboard.add_button('mersedesüöó', color=VkKeyboardColor.PRIMARY)

        keyboard.add_line()  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É
        keyboard.add_button('porsheüöô', color=VkKeyboardColor.DEFAULT)

        keyboard.add_line()
        keyboard.add_button('lamborghiniüèé', color=VkKeyboardColor.NEGATIVE)

    elif response =='–º–∞—à–∏–Ω—ã':
        keyboard.add_button('bmwüöó', color=VkKeyboardColor.POSITIVE)
        keyboard.add_button('mersedesüöó', color=VkKeyboardColor.PRIMARY)

        keyboard.add_line()  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É
        keyboard.add_button('porsheüöô', color=VkKeyboardColor.DEFAULT)

        keyboard.add_button('lamborghiniüèé', color=VkKeyboardColor.NEGATIVE)

        keyboard.add_line()
        keyboard.add_button('–≤–µ—Ä–Ω—É—Ç—å—Å—èüîô', color=VkKeyboardColor.NEGATIVE)

    elif response == 'bmw' or 'bmwüöó':

        keyboard.add_button('BMW 6-Series', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()

        keyboard.add_button('BMW X6', color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()

        keyboard.add_button('BMW Z4', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()

        keyboard.add_button('BMW X1', color=VkKeyboardColor.DEFAULT)

        keyboard.add_line()
        keyboard.add_button('–ú–∞—à–∏–Ω—ã', color=VkKeyboardColor.NEGATIVE)



    elif response == 'mersedes' or 'mersedesüöó':

        keyboard.add_button('Mercedes-Benz CLS-Class', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()

        keyboard.add_button('Mercedes-Benz E-Class', color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()

        keyboard.add_button('Mercedes-Benz G-Class', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()

        keyboard.add_button('Mercedes-Benz SLK-Class', color=VkKeyboardColor.DEFAULT)

        keyboard.add_line()
        keyboard.add_button('–≤–µ—Ä–Ω—É—Ç—å—Å—è‚óÄ ', color=VkKeyboardColor.NEGATIVE)

    elif response == 'porshe' or 'porsheüöô':

        keyboard.add_button('Porsche 918 Spyder', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()

        keyboard.add_button('Porsche Panamera', color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()

        keyboard.add_button('Porsche Cayenne', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()

        keyboard.add_button('Porsche Macan —Ü–µ–Ω–∞', color=VkKeyboardColor.DEFAULT)

        keyboard.add_line()
        keyboard.add_button('–≤–µ—Ä–Ω—É—Ç—å—Å—è‚óÄ ', color=VkKeyboardColor.NEGATIVE)

    elif response == 'lamborghini' or 'lamborghiniüèé':

        keyboard.add_button('Lamborghini Urus', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()

        keyboard.add_button('Lamborghini Huracan', color=VkKeyboardColor.PRIMARY)
        keyboard.add_line()

        keyboard.add_button('Lamborghini Huracan Spyder', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()

        keyboard.add_button('Lamborghini Aventador Roadster', color=VkKeyboardColor.DEFAULT)

        keyboard.add_line()
        keyboard.add_button('–≤–µ—Ä–Ω—É—Ç—å—Å—è‚óÄ ', color=VkKeyboardColor.NEGATIVE)


    elif response == '—Ä–∞–±–æ—Ç–∞—Ç—å':
        keyboard.add_button('–†–∞–±–æ—Ç–∞—Ç—å', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—èüîô', color=VkKeyboardColor.POSITIVE)


    elif response == '–∫–æ—Ç–∏–∫–∏':
        keyboard.add_button('–ö–æ—Ç–∏–∫–∏!', color=VkKeyboardColor.POSITIVE)


    elif response == '–∑–∞–∫—Ä—ã—Ç—å':
        print('–∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤—É')
        return keyboard.get_empty_keyboard()

    keyboard = keyboard.get_keyboard()
    return keyboard



def send_message(vk_session, id_type, id, message=None, attachment=None, keyboard=None):
    vk_session.method('messages.send',{id_type: id, 'message': message, 'random_id': random.randint(-2147483648, +2147483648), "attachment": attachment, 'keyboard': keyboard})

player = {"jobs": "none", "possessions": "none"}

def get_money():
    MyFile = open('', 'r')
    money=int(MyFile.readline())
    MyFile.close()
    return(money)

def set_money(_money):
    MyFile = open('', 'w')
    MyFile.write(str(_money))
    MyFile.close()

for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        print('–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –≤: ' + str(datetime.strftime(datetime.now(), "%H:%M:%S")))

        print(event.user_id)
        response = event.text.lower()
        keyboard = create_keyboard(response)



        if event.from_user and not event.from_me:





            if response == '–Ω–∞—á–∞—Ç—å':
                send_message(vk_session, 'user_id', event.user_id, message='–ü—Ä–∏–≤–µ—Ç —ç—Ç–æ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å! ')
                send_message(vk_session, 'user_id', event.user_id, message='–ò —Ç—É—Ç –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤—Å—ë —á—Ç–æ –Ω–∞–¥–æ –¥–ª—è  –∏–≥—Ä—ã!')
                send_message(vk_session, 'user_id', event.user_id, message="–≠—Ç–æ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!")
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞:")
                send_message(vk_session, 'user_id', event.user_id, player["jobs"])
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à –±–∞–ª–∞–Ω—Å:")
                send_message(vk_session, 'user_id', event.user_id, get_money())
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à–∏ –≤–ª–∞–¥–µ–Ω–∏—è:")
                send_message(vk_session, 'user_id', event.user_id, player["possessions"])

            elif response == "–ø—Ä–∏–≤–µ—Ç":
                send_message(vk_session, 'user_id', event.user_id, message='–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥',keyboard=keyboard)
            elif response == "—Ç–µ—Å—Ç":
                send_message(vk_session, 'user_id', event.user_id, message= '–¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã',keyboard=keyboard)
            elif response=='–∫–æ–º–∞–Ω–¥—ã':
                send_message(vk_session, 'user_id', event.user_id, message='–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: \n \n 1)–ö–æ–º–∞–Ω–¥–∞1 \n 2)–ö–æ–º–∞–Ω–¥–∞2')

            elif response=='–∑–∞–∫—Ä—ã—Ç—å':
                send_message(vk_session, 'user_id', event.user_id, message='–ó–∞–∫—Ä—ã—Ç—å',keyboard=keyboard)

            elif response == '–±–∞–ª–∞–Ω—Å' or response == '–±–∞–ª–∞–Ω—Åüíº':
                send_message(vk_session, 'user_id', event.user_id, get_money())
                send_message(vk_session, 'user_id', event.user_id, message="–≠—Ç–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö üí∏")

            elif response == '–ø—Ä–æ—Ñ–∏–ª—å' or response == '–ø—Ä–æ—Ñ–∏–ª—åüë§':
                send_message(vk_session, 'user_id', event.user_id, message="–≠—Ç–æ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!")
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞:")
                send_message(vk_session, 'user_id', event.user_id, player["jobs"])
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à –±–∞–ª–∞–Ω—Å:")
                send_message(vk_session, 'user_id', event.user_id, get_money())
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à–∏ –≤–ª–∞–¥–µ–Ω–∏—è:")
                send_message(vk_session, 'user_id', event.user_id, player["possessions"])

            elif response == '–º–∞–≥–∞–∑–∏–Ωüè™' or response == '–º–∞–≥–∞–∑–∏–Ω':
                send_message(vk_session, 'user_id', event.user_id, message="–ú–ê–ì–ê–ó–ò–ù")
                send_message(vk_session, 'user_id', event.user_id, message="üë±Ô∏è–î–æ–±—Ä—ã–π –¥–µ–Ω—å —á—Ç–æ –±—É–¥–µ—Ç–µ –±—Ä–∞—Ç—å?",keyboard=keyboard)

            elif response == '—Ä–∞–±–æ—Ç–∞—Ç—å':
                set_money(get_money()+1)
                send_message(vk_session, 'user_id', event.user_id, message="–ï—Å—Ç—å")
                send_message(vk_session, 'user_id', event.user_id, get_money())
                send_message(vk_session, 'user_id', event.user_id, message="–≠—Ç–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö üí∏",keyboard=keyboard)

            elif response == '—Ä–∞–Ω–¥–æ–º':
                send_message(vk_session, 'user_id', event.user_id,random.randint(1,10))

            elif response =='–≤–µ—Ä–Ω—É—Ç—å—Å—èüîô' or response == '–≤–µ—Ä–Ω—É—Ç—å—Å—è':
                send_message(vk_session, 'user_id', event.user_id, message="–ü—Ä–æ—Ñ–∏–ª—åüë§")
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞:")
                send_message(vk_session, 'user_id', event.user_id, player["jobs"])
                send_message(vk_session, 'user_id', event.user_id, message="–í–∞—à –±–∞–ª–∞–Ω—Å:")
                send_message(vk_session, 'user_id', event.user_id, get_money())

            elif response =='–≤–µ—Ä–Ω—É—Ç—å—Å—è‚óÄ':
                send_message(vk_session, 'user_id', event.user_id, message="BMW")
                send_message(vk_session, 'user_id', event.user_id, message="MERCEDES")
                send_message(vk_session, 'user_id', event.user_id, message="PORSHE")
                send_message(vk_session, 'user_id', event.user_id, message="LAMBORGHINI",keyboard=keyboard)

            elif response =='–º–∞—à–∏–Ω—ã':
                send_message(vk_session, 'user_id', event.user_id, message="BMW")
                send_message(vk_session, 'user_id', event.user_id, message="MERCEDES")
                send_message(vk_session, 'user_id', event.user_id, message="PORSHE")
                send_message(vk_session, 'user_id', event.user_id, message="LAMBORGHINI",keyboard=keyboard)

            elif response == 'bmw' or 'bmwüöó' :
                send_message(vk_session, 'user_id', event.user_id, message="BMW 6-Series \n —Ü–µ–Ω–∞ 2 200 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="BMW X6 \n —Ü–µ–Ω–∞ 8 500 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="BMW Z4 \n —Ü–µ–Ω–∞ 5 005 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="BMW X1 \n —Ü–µ–Ω–∞ 3 000 000 üí∏",keyboard=keyboard)

            elif response == 'mercedes' or 'mersedesüöó':
                send_message(vk_session, 'user_id', event.user_id, message="Mercedes-Benz CLS-Class \n —Ü–µ–Ω–∞ 5 900 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Mercedes-Benz E-Class \n —Ü–µ–Ω–∞ 4 000 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Mercedes-Benz G-Class \n —Ü–µ–Ω–∞ 17 500 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Mercedes-Benz SLK-Class \n —Ü–µ–Ω–∞ 500 000 üí∏",keyboard=keyboard)

            elif response == 'porsche' or 'porsheüöô':
                send_message(vk_session, 'user_id', event.user_id, message="Porsche 918 Spyder \n —Ü–µ–Ω–∞ 100 000 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Porsche Panamera \n —Ü–µ–Ω–∞ 9 500 000  üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Porsche Cayenne \n —Ü–µ–Ω–∞ 8 500 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Porsche Macan \n —Ü–µ–Ω–∞ 5 500 000 üí∏",keyboard=keyboard)

            elif response == 'lamborghini' or 'lamborghiniüèé':
                send_message(vk_session, 'user_id', event.user_id, message="Lamborghini Urus \n —Ü–µ–Ω–∞ 15 200 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Lamborghini Huracan \n —Ü–µ–Ω–∞ 17 760 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Lamborghini Huracan Spyder \n —Ü–µ–Ω–∞ 18 650 000 üí∏")
                send_message(vk_session, 'user_id', event.user_id, message="Lamborghini Aventador Roadster \n —Ü–µ–Ω–∞ 25 500 000 üí∏",keyboard=keyboard)



            else:
                send_message(vk_session, 'user_id', event.user_id,message='–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é!' )


        elif event.from_chat :
            if response == "–∫–æ—Ç–∏–∫–∏":
                attachment = get_pictures.get(vk_session, -130670107, session_api)
                print(attachment)
                send_message(vk_session, 'chat_id', event.chat_id, message='–î–µ—Ä–∂–∏—Ç–µ –∫–æ—Ç–∏–∫–æ–≤!', attachment= attachment)
        print('-' * 30)












